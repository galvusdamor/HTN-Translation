(define (domain towers)
 (:requirements :strips :disjunctive-preconditions)
 (:types OBJ RING - OBJ TOWER - OBJ)
 (:predicates
  (on ?r - RING ?o - OBJ)
  (towerTop ?o - OBJ ?t - TOWER)
  (smallerThan ?r - RING ?o - OBJ))

 (:method shiftTower
  ; shift tower from ?t1 to ?t3 using ?t2
  :parameters (?r - RING ?t1 - TOWER ?t2 - TOWER ?t3 - TOWER)
  :task (shiftTower ?t1 ?t2 ?t3)
  :precondition (towerTop ?r ?t1)
  :branches((:branch d :tasks ((selectDirection ?r ?t1 ?t2 ?t3)))))

 (:method selectedDirection
  :parameters (?r - RING ?t1 - TOWER ?t2 - TOWER ?t3 - TOWER)
  :task (selectDirection ?r ?t1 ?t2 ?t3)
  :branches (
   (:branch set
    :precondition (on ?r ?t1)
    :tasks ((rotateTower ?t1 ?t3 ?t2)))))

 (:method selectDirection
  :parameters (?r - RING ?t1 - TOWER ?t2 - TOWER ?t3 - TOWER)
  :task (selectDirection ?r ?t1 ?t2 ?t3)
  :branches (
   (:branch find
    :parameters (?r1 - RING)
    :precondition (on ?r ?r1)
    :tasks ((selectDirection ?r1 ?t1 ?t3 ?t2)))))
 
 (:method rotateTower
  :parameters (?t1 - TOWER ?t2 - TOWER ?t3 - TOWER)
  :task (rotateTower ?t1 ?t2 ?t3)
  :branches (
   (:branch working
    :tasks ((move ?t1 ?t2) (exchange ?t1 ?t2 ?t3)))))

 (:method exchangeClear
  :parameters (?t1 - TOWER ?t2 - TOWER ?t3 - TOWER)
  :task (exchange ?t1 ?t2 ?t3)
  :branches (
   (:branch done
    :precondition (and (towerTop ?t1 ?t1) (towerTop ?t3 ?t3)))))

 (:method exchangeLR
  :parameters (?t1 - TOWER ?t2 - TOWER ?t3 - TOWER)
  :task (exchange ?t1 ?t2 ?t3)
  :branches (
   (:branch working
    :parameters (?r1 - RING ?o3 - OBJ)
    :precondition (and (towerTop ?r1 ?t1) (towerTop ?o3 ?t3) (smallerThan ?r1 ?o3))
    :tasks ((move ?t1 ?t3) (rotateTower ?t2 ?t3 ?t1)))))

 (:method exchangeRL
  :parameters (?t1 - TOWER ?t2 - TOWER ?t3 - TOWER)
  :task (exchange ?t1 ?t2 ?t3)
  :branches (
   (:branch working
    :parameters (?o1 - OBJ ?r3 - RING)
    :precondition (and (towerTop ?o1 ?t1) (towerTop ?r3 ?t3) (smallerThan ?r3 ?o1))
    :tasks ((move ?t3 ?t1) (rotateTower ?t2 ?t3 ?t1)))))

 (:action move
  :parameters (?r - RING ?o1 - OBJ ?t1 - TOWER ?o2 - OBJ ?t2 - TOWER)
  :task (move ?t1 ?t2)
  :precondition (and
    (towerTop ?r ?t1)
    (towerTop ?o2 ?t2)
    (on ?r ?o1) 
    (smallerThan ?r ?o2))
  :effect (and
    (not (on ?r ?o1)) 
    (on ?r ?o2)
    (not (towerTop ?r ?t1))
    (towerTop ?o1 ?t1) 
    (not (towerTop ?o2 ?t2))
    (towerTop ?r ?t2))))


