(define (domain basic)
(:requirements :disjunctive-preconditions :strips)
(:types OBJ)
(:predicates
  (have ?o - OBJ)
  (handempty)
)
(:tasks
  (swap ?x - OBJ ?y - OBJ)
  (donothing)
  (pickup ?x - OBJ)
  (drop ?x - OBJ))

(:method swap1
 :parameters (?x - OBJ ?y - OBJ)
 :task (swap ?x ?y)
 :precondition (have ?x)
 :tasks ((drop ?x) (pickup ?y)))

(:method swap2
 :parameters (?x - OBJ ?y - OBJ)
 :task (swap ?x ?y)
 :precondition (have ?y)
 :tasks ((drop ?y) (pickup ?x)))
 
(:method donothing
 :parameters (?o - OBJ)
 :task (donothing)
 :precondition ())

(:method swapswap
 :parameters (?x - OBJ ?y - OBJ ?z - OBJ)
 :task (swap ?x ?y)
 :tasks ((swap ?x ?z)  (swap ?z ?y)))

(:action pickup
 :parameters (?x - OBJ)
 :task (pickup ?x)
 :precondition (handempty)
 :effect (have ?x)
)

(:action drop
 :parameters (?x - OBJ)
 :task (drop ?x)
 :precondition (have ?x)
 :effect (and (handempty) (not (have ?x)))
)


)
